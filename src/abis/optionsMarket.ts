export const optionsMarketAbi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: '_vault',
        type: 'address',
        internalType: 'contract ITimelockVault',
      },
      {
        name: '_optionPricing',
        type: 'address',
        internalType: 'contract IOptionPricing',
      },
      {
        name: '_feeStrategy',
        type: 'address',
        internalType: 'contract IFeeStrategy',
      },
      {
        name: '_feeRecipient',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_guardian',
        type: 'address',
        internalType: 'contract TimelockGuardian',
      },
      {
        name: '_optionAssetIsToken0',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'DUST_THRESHOLD',
    inputs: [],
    outputs: [{name: '', type: 'uint256', internalType: 'uint256'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'MAX_STEPS',
    inputs: [],
    outputs: [{name: '', type: 'uint256', internalType: 'uint256'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'calculatePremium',
    inputs: [
      {name: 'optionType', type: 'uint8', internalType: 'uint8'},
      {
        name: 'optionAmount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {name: 'strikeTick', type: 'int24', internalType: 'int24'},
      {name: 'addedDuration', type: 'uint32', internalType: 'uint32'},
      {
        name: 'remainingDuration',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {name: 'premium', type: 'uint256', internalType: 'uint256'},
      {name: 'protocolFee', type: 'uint256', internalType: 'uint256'},
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'emergencyWithdraw',
    inputs: [
      {
        name: 'tokens',
        type: 'address[]',
        internalType: 'contract IERC20[]',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'exerciseOption',
    inputs: [
      {name: 'optionId', type: 'uint256', internalType: 'uint256'},
      {
        name: 'liquidities',
        type: 'uint128[]',
        internalType: 'uint128[]',
      },
      {name: 'minPayout', type: 'uint256', internalType: 'uint256'},
      {
        name: 'swapper',
        type: 'address',
        internalType: 'contract ISwapper',
      },
      {name: 'swapperData', type: 'bytes', internalType: 'bytes'},
      {name: 'refTick', type: 'int24', internalType: 'int24'},
    ],
    outputs: [{name: 'payout', type: 'uint256', internalType: 'uint256'}],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'extendOption',
    inputs: [
      {name: 'optionId', type: 'uint256', internalType: 'uint256'},
      {name: 'addedDuration', type: 'uint32', internalType: 'uint32'},
      {name: 'maxPremium', type: 'uint256', internalType: 'uint256'},
    ],
    outputs: [
      {name: 'premium', type: 'uint256', internalType: 'uint256'},
      {name: 'protocolFee', type: 'uint256', internalType: 'uint256'},
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'feeRecipient',
    inputs: [],
    outputs: [{name: '', type: 'address', internalType: 'address'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'feeStrategy',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IFeeStrategy',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getOption',
    inputs: [{name: 'optionId', type: 'uint256', internalType: 'uint256'}],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct TimelockOptionsMarket.OptionData',
        components: [
          {name: 'owner', type: 'address', internalType: 'address'},
          {name: 'optionType', type: 'uint8', internalType: 'uint8'},
          {name: 'strikeTick', type: 'int24', internalType: 'int24'},
          {name: 'entryTick', type: 'int24', internalType: 'int24'},
          {name: 'expiresAt', type: 'uint32', internalType: 'uint32'},
        ],
      },
      {name: '', type: 'uint128[]', internalType: 'uint128[]'},
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'guardian',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract TimelockGuardian',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'liquiditiesToAmounts',
    inputs: [
      {name: 'startTick', type: 'int24', internalType: 'int24'},
      {
        name: 'liquiditys',
        type: 'uint128[]',
        internalType: 'uint128[]',
      },
      {name: 'optionType', type: 'uint8', internalType: 'uint8'},
    ],
    outputs: [
      {
        name: 'optionAssetToRepay',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'payoutAssetToRepay',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'optionAssetBorrowed',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'payoutAssetBorrowed',
        type: 'uint256',
        internalType: 'uint256',
      },
      {name: 'currentTick', type: 'int24', internalType: 'int24'},
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'mintOption',
    inputs: [
      {name: 'owner', type: 'address', internalType: 'address'},
      {name: 'optionType', type: 'uint8', internalType: 'uint8'},
      {name: 'amount', type: 'uint256', internalType: 'uint256'},
      {name: 'strikeTick', type: 'int24', internalType: 'int24'},
      {name: 'duration', type: 'uint32', internalType: 'uint32'},
      {name: 'maxPremium', type: 'uint256', internalType: 'uint256'},
      {name: 'refTick', type: 'int24', internalType: 'int24'},
    ],
    outputs: [
      {name: 'optionId', type: 'uint256', internalType: 'uint256'},
      {name: 'finalAmount', type: 'uint256', internalType: 'uint256'},
      {name: 'premium', type: 'uint256', internalType: 'uint256'},
      {name: 'protocolFee', type: 'uint256', internalType: 'uint256'},
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'multicall',
    inputs: [{name: 'data', type: 'bytes[]', internalType: 'bytes[]'}],
    outputs: [{name: 'results', type: 'bytes[]', internalType: 'bytes[]'}],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'nextOptionId',
    inputs: [],
    outputs: [{name: '', type: 'uint256', internalType: 'uint256'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'operatorPerms',
    inputs: [
      {name: '', type: 'address', internalType: 'address'},
      {name: '', type: 'address', internalType: 'address'},
    ],
    outputs: [
      {name: 'canExtend', type: 'bool', internalType: 'bool'},
      {name: 'canExercise', type: 'bool', internalType: 'bool'},
      {name: 'canTransfer', type: 'bool', internalType: 'bool'},
      {name: 'canMint', type: 'bool', internalType: 'bool'},
      {
        name: 'spendingApproval',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'optionAsset',
    inputs: [],
    outputs: [{name: '', type: 'address', internalType: 'contract IERC20'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'optionAssetIsToken0',
    inputs: [],
    outputs: [{name: '', type: 'bool', internalType: 'bool'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'optionPricing',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IOptionPricing',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{name: '', type: 'address', internalType: 'address'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'payoutAsset',
    inputs: [],
    outputs: [{name: '', type: 'address', internalType: 'contract IERC20'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pool',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IUniswapV3Pool',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setOperatorPerms',
    inputs: [
      {name: 'operator', type: 'address', internalType: 'address'},
      {name: 'canExtend', type: 'bool', internalType: 'bool'},
      {name: 'canExercise', type: 'bool', internalType: 'bool'},
      {name: 'canTransfer', type: 'bool', internalType: 'bool'},
      {name: 'canMint', type: 'bool', internalType: 'bool'},
      {
        name: 'spendingApproval',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'tickSpacing',
    inputs: [],
    outputs: [{name: '', type: 'int24', internalType: 'int24'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'token0',
    inputs: [],
    outputs: [{name: '', type: 'address', internalType: 'contract IERC20'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'token1',
    inputs: [],
    outputs: [{name: '', type: 'address', internalType: 'contract IERC20'}],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferOption',
    inputs: [
      {name: 'optionId', type: 'uint256', internalType: 'uint256'},
      {name: 'to', type: 'address', internalType: 'address'},
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{name: 'newOwner', type: 'address', internalType: 'address'}],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateAddresses',
    inputs: [
      {
        name: '_optionPricing',
        type: 'address',
        internalType: 'contract IOptionPricing',
      },
      {
        name: '_feeStrategy',
        type: 'address',
        internalType: 'contract IFeeStrategy',
      },
      {
        name: '_feeRecipient',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'vault',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract ITimelockVault',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'AddressesUpdated',
    inputs: [
      {
        name: 'optionPricing',
        type: 'address',
        indexed: false,
        internalType: 'contract IOptionPricing',
      },
      {
        name: 'feeStrategy',
        type: 'address',
        indexed: false,
        internalType: 'contract IFeeStrategy',
      },
      {
        name: 'feeRecipient',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'EmergencyWithdraw',
    inputs: [
      {
        name: 'tokens',
        type: 'address[]',
        indexed: false,
        internalType: 'contract IERC20[]',
      },
      {
        name: 'balances',
        type: 'uint256[]',
        indexed: false,
        internalType: 'uint256[]',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ExerciseOption',
    inputs: [
      {
        name: 'optionId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'liquidities',
        type: 'uint128[]',
        indexed: false,
        internalType: 'uint128[]',
      },
      {
        name: 'currentTick',
        type: 'int24',
        indexed: false,
        internalType: 'int24',
      },
      {
        name: 'payout',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ExtendOption',
    inputs: [
      {
        name: 'optionId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'premium',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'protocolFee',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'currentTick',
        type: 'int24',
        indexed: false,
        internalType: 'int24',
      },
      {
        name: 'addedDuration',
        type: 'uint32',
        indexed: false,
        internalType: 'uint32',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MintOption',
    inputs: [
      {
        name: 'optionId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'optionType',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
      {
        name: 'strikeTick',
        type: 'int24',
        indexed: false,
        internalType: 'int24',
      },
      {
        name: 'currentTick',
        type: 'int24',
        indexed: false,
        internalType: 'int24',
      },
      {
        name: 'expiresAt',
        type: 'uint32',
        indexed: false,
        internalType: 'uint32',
      },
      {
        name: 'premium',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'protocolFee',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'liquidities',
        type: 'uint128[]',
        indexed: false,
        internalType: 'uint128[]',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TransferOption',
    inputs: [
      {
        name: 'optionId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'to',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'UpdateOperatorPerms',
    inputs: [
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'operator',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'canExtend',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
      {
        name: 'canExercise',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
      {
        name: 'canTransfer',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
      {
        name: 'canMint',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
      {
        name: 'spendingApproval',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'AddressEmptyCode',
    inputs: [{name: 'target', type: 'address', internalType: 'address'}],
  },
  {type: 'error', name: 'FailedCall', inputs: []},
  {type: 'error', name: 'InsufficientLiquidity', inputs: []},
  {type: 'error', name: 'InvalidAmount', inputs: []},
  {type: 'error', name: 'InvalidArrayLength', inputs: []},
  {type: 'error', name: 'InvalidDuration', inputs: []},
  {type: 'error', name: 'InvalidOptionType', inputs: []},
  {
    type: 'error',
    name: 'InvalidTickRange',
    inputs: [
      {name: 'tickLower', type: 'int24', internalType: 'int24'},
      {name: 'tickUpper', type: 'int24', internalType: 'int24'},
    ],
  },
  {type: 'error', name: 'NotAuthorized', inputs: []},
  {type: 'error', name: 'NotEnoughPayout', inputs: []},
  {type: 'error', name: 'OperatorBlacklisted', inputs: []},
  {type: 'error', name: 'OptionExpired', inputs: []},
  {type: 'error', name: 'OptionNotFound', inputs: []},
  {
    type: 'error',
    name: 'OwnableInvalidOwner',
    inputs: [{name: 'owner', type: 'address', internalType: 'address'}],
  },
  {
    type: 'error',
    name: 'OwnableUnauthorizedAccount',
    inputs: [{name: 'account', type: 'address', internalType: 'address'}],
  },
  {type: 'error', name: 'PremiumTooHigh', inputs: []},
  {type: 'error', name: 'ReentrancyGuardReentrantCall', inputs: []},
  {
    type: 'error',
    name: 'SafeERC20FailedOperation',
    inputs: [{name: 'token', type: 'address', internalType: 'address'}],
  },
  {type: 'error', name: 'SwapFailed', inputs: []},
  {type: 'error', name: 'TradingPaused', inputs: []},
  {type: 'error', name: 'WithdrawNotAllowed', inputs: []},
  {type: 'error', name: 'ZeroAddress', inputs: []},
] as const;
